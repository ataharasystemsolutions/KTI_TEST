@model AdminLteMvc.Models.WEBSales.ATW

@{
    ViewBag.Title = "Add ATW";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="box box-success">
        <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        @*<div class="form-group row">
            <label for="bookingno" class="col-sm-3 col-form-label">Booking No.</label>
            <div class="col-sm-9    ">
                <select id="bookingno" class="form-control">

                    @{
                        if (ViewBag.Opt == "Single")
                        {
                            <option value="@ViewBag.BookNum">@ViewBag.BookNum</option>
                        }
                        else
                        {
                            <option value="0">-- Select booking --</option>
                            foreach (var item in ViewBag.DocumentNumbers)
                            {
                                <option value="@item.Value">@item.Text</option>
                            }
                        }
                    }

                </select>
                @{ if (ViewBag.Opt == "Multiple")
                    {<span style="color:red;font-size:20px;"><b>*</b></span>}
                }
            </div>
        </div>*@
                        <div class="form-group row">
                            <label for="atwno" class="col-sm-3 col-form-label">ATW No</label>
                            <div class="col-sm-9    ">
                                @Html.EditorFor(model => model.atwBkNo, new { htmlAttributes = new { @class = "form-control", id = "atwno", @readonly = true } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="issuedate" class="col-sm-3 col-form-label">Issue Date</label>
                            <div class="col-sm-9    ">
                                @Html.EditorFor(model => model.iDate, new { htmlAttributes = new { @type = "date", @class = "form-control", id = "issuedate" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="expirydate" class="col-sm-3 col-form-label">Expiry Date</label>
                            <div class="col-sm-9    ">
                                @Html.EditorFor(model => model.eDate, new { htmlAttributes = new { @type = "date", @class = "form-control", id = "expirydate" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="issuedby" class="col-sm-3 col-form-label">ATW Issued By</label>
                            <div class="col-sm-9    ">
                                <select id="issuedby" class="form-control">
                                    @{
                                        <option value="0">-- Select issuer --</option>
                                        foreach (var item in ViewBag.IssuersList)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        @*<div class="form-group row">
                            <label for="cvno" class="col-sm-3 col-form-label">ConVan No</label>
                            <div class="col-sm-9    ">
                                <select id="cvno" class="form-control">
                                    @{
                                        <option value="0">-- Select no --</option>
                                        foreach (var item in ViewBag.ConVanNoList)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>*@
                    </div>
                    <div class="col-md-6">
                        <div class="form-group row">
                            <label for="authorizedtrucker" class="col-sm-5 col-form-label">Authorized Trucker</label>
                            <div class="col-sm-7    ">
                                <select id="authorizedtrucker" class="form-control">
                                    @{
                                        <option value="0">-- Select trucker --</option>
                                        foreach (var item in ViewBag.TruckerList)
                                        {
                                            <option value="@item.Value">@item.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="authorizeddriver" class="col-sm-5 col-form-label">Authorized Driver</label>
                            <div class="col-sm-7    ">
                                @Html.EditorFor(model => model.aDriver, new { htmlAttributes = new { @class = "form-control", id = "authorizeddriver" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="plateno" class="col-sm-5 col-form-label">Truck Plate No.</label>
                            <div class="col-sm-7    ">
                                @Html.EditorFor(model => model.plateNo, new { htmlAttributes = new { @class = "form-control", id = "plateno" } })
                            </div>
                        </div>
                        <div class="form-group row">
                            <label for="remarks" class="col-sm-5 col-form-label">Remarks</label>
                            <div class="col-sm-7    ">
                                @Html.TextAreaFor(m => m.remarks, new { @class = "form-control", id = "remarks" })
                            </div>
                        </div>
                    </div>
                </div>
           
            @*<i>*Please select transaction below to withdraw  (maximum of 2 CVs only).</i>*@
            <div class="box-header with-border">
                <h3 class="box-title">@Html.Awe().TextBox("txtsearch").Placeholder("Search").CssClass("searchtxt")</h3>
                <i>*Please select transaction below to withdraw  (maximum of 2 CVs only).</i>
            </div>
            <div id="demoContent">
                @(Html.Awe().Grid("ApiDemoGrid")
          .Mod(o => o.PageInfo().PageSize().ColumnsSelector())
          .Columns(new[]{
              new Column{Bind = "transactionNo", Header = "Transaction No"},
              new Column{Bind = "serviceType", Header = "Service Type"},
              new Column{Bind = "cnameshipper",Header = "Customer/Shipper Name"},
              new Column{Bind = "origin",Header = "Origin"},
              new Column{Bind = "destination",Header = "Destination"},
              new Column{Bind = "consignee1",Header = "Consignee 1"},
              new Column{Bind = "consignee2",Header = "Consignee 2"},
              new Column{Bind = "consignee3",Header = "Consignee 3"},
              new Column{Bind = "consignee4",Header = "Consignee 4"},
              new Column{Bind = "consignee5",Header = "Consignee 5"},
              new Column{Bind = "consignee6",Header = "Consignee 6"},
              new Column{Bind = "consignee7",Header = "Consignee 7"},
              new Column{Bind = "consignee8",Header = "Consignee 8"},
              new Column{Bind = "consignee9",Header = "Consignee 9"},
              new Column{Bind = "consignee10",Header = "Consignee 10"}

          })

              .Resizable()
              .Sortable(true)
              .Reorderable()
              .Height(350)
              .Groupable(false)
              .Selectable(SelectionType.Multicheck)
              .Parent("txtsearch", "search")
              .Url(Url.Action("GetAllTrns", "ATW")))

            </div>
        </div>
        <div>
            @Html.EditorFor(model => model.atwYear, new { htmlAttributes = new { @class = "form-control", id = "atwyear", @readonly = true } })
            @Html.EditorFor(model => model.atwBkID, new { htmlAttributes = new { @class = "form-control", id = "atwbkid", @readonly = true } })
            @Html.EditorFor(model => model.trns, new { htmlAttributes = new { @class = "form-control", id = "transSelect", @readonly = true } })
            @Html.EditorFor(model => model.bkNo, new { htmlAttributes = new { @class = "form-control", id = "bkno", @readonly = true } })
            <input type="text" id="cvnos" readonly>
            <input type="text" id="shippers" readonly>
        </div>
        @*<table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Select</th>
                        <th>Transaction No.</th>
                        <th>Service Type</th>
                        <th>Customer/Shipper Name</th>
                        <th>Origin</th>
                        <th>Destination</th>
                        <th>Consignee Name</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        if (ViewBag.Opt == "Single")
                        {
                            <tr>
                                <td><input type="checkbox" name="trnsction" value="@ViewBag.TRNDetail.transactionNo" checked></td>
                                <td>@ViewBag.TRNDetail.transactionNo</td>
                                <td>@ViewBag.TRNDetail.serviceType</td>
                                <td>@ViewBag.CnameShipper</td>
                                <td>@ViewBag.TRNDetail.origin</td>
                                <td>@ViewBag.TRNDetail.destination</td>
                                <td>@ViewBag.TRNDetail.consignee</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>*@
        <div class="box-footer">
            <button type="button" class="btn btn-primary" id="submit"> <i class="fa fa-arrow-circle-right"></i> Proceed </button>
            @*<button type="button" class="btn btn-primary" id="trial"> <i class="fa fa-pencil fa-1x"></i> Test </button>*@
            <button type="button" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "ATW")'"> <i class="fa fa-times"></i> Cancel</button>
        </div>
    </div>
}
<link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
<script src="~/Scripts/bootstap-toggle.js"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

@section Scripts{
    <script src="~/Scripts/bootstap-toggle.js"></script>
    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">

        $(function () {

            $('#ApiDemoGrid').on('awerender', function () {
                $(this).find(".checkbox-toggle").bootstrapToggle();
            });

            $('#txtsearch').keyup(function () {
                $('#ApiDemoGrid').data('api').load();
            });

            $('#ApiDemoGrid').on('aweload', function (e, data, rd) {
                $('#log').prepend('aweload handled,\n data: ' + JSON.stringify(data) + "\n request data" + JSON.stringify(rd) + '\n\n');
            }).on('awebeginload', function (e, data) {
                $('#log').prepend('awebeginload handled,\n request data: ' + JSON.stringify(data) + '\n\n');
            })

            var lastSelectedIds;
            $('#ApiDemoGrid').on('aweselect', function () {
                lastSelectedIds = $.map($(this).data('api').getSelection(), function (val) { return val.transactionNo; });
                cvnocur = $.map($(this).data('api').getSelection(), function (val) { return val.convanno; });
                shippercur = $.map($(this).data('api').getSelection(), function (val) { return val.cnameshipper; });
                document.getElementById("transSelect").value = lastSelectedIds;
                document.getElementById("cvnos").value = cvnocur;
                document.getElementById("shippers").value = shippercur;
            })

            //$('#trial').click(function () {
            //    alert(lastSelectedIds);
            //    if (lastSelectedIds != null) {
            //        //if (lastSelectedIds.length != 0) {
            //        //    window.location.href = '/Booking/TrnDetails/' + lastSelectedIds;
            //        //}
            //        //else {
            //        //    $.notify("Please select booking to view its details.", "error");
            //        //}
            //        document.getElementById("transSelect").value = lastSelectedIds;
            //    }
            //    else {
            //        $.notify("Please select at least 1 transaction to withdraw.", "error");
            //    }
            //});
        });

        function setContent(o) {
            $('#ApiDemoGrid').data('api').clearpersist();
            $('#demoContent').html(o);
        };

        var toggleButton = function (model, prop) {
            var checked = model[prop] ? 'checked = "checked"' : '';
            return '<input disabled="disabled" type="checkbox" ' + checked + ' class="checkbox-toggle" data-toggle="toggle" data-on="Yes" data-off="No" data-size="small">';
        };

    </script>

    <script type="text/javascript">

        $(function () {
            //$("#bookingno").chosen();
            $("#authorizedtrucker").chosen();
            $("#issuedby").chosen();
            $("#cvno").chosen();

        });

        $("#atwyear").css("display", "none");
        $("#atwbkid").css("display", "none");
        $("#transSelect").css("display", "none");
        $("#bkno").css("display", "none");
        $("#cvnos").css("display", "none");
        $("#shippers").css("display", "none");

        $(document).ready(function () {
        $('#issuedate').on("change", function () {
            var tt = document.getElementById('issuedate').value;

            var today = new Date(tt);
            var dd = today.getDate()+2;
            var mm = today.getMonth() + 1;
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd
            }
            if (mm < 10) {
                mm = '0' + mm
            }

            today = yyyy + '-' + mm + '-' + dd;
            document.getElementById("expirydate").value = today;

            var yearInput = yyyy.toString()

            $.ajax({
                url: '../../../ATW/GetIDSFromYear',
                type: 'GET',
                data: { yearInput: yearInput },
                contentType: "application/json",
                success: function (ids) {
                    console.log("I'M HERE");
                    console.log(ids);
                    var docFormatted = 'ATW-' + yearInput + '-' + ids;
                    document.getElementById("atwno").value = docFormatted;
                    document.getElementById("atwyear").value = yearInput;
                    document.getElementById("atwbkid").value = ids;
                    document.getElementById("bkno").value = yearInput + '-' + ids;
                },
            });
        });

        //$('#bookingno').on("change", function () {
        //    var bookingNum = document.getElementById('bookingno').value;
        //    //alert(bookingNum);

        //    var bknumber = bookingNum.toString();

        //    $.ajax({
        //        url: '../../../ATW/GetATWTrnDetails',
        //        type: 'get',
        //        data: { bknumber: bknumber },
        //        contenttype: "application/json",
        //        success: function (company) {
        //            console.log(company);
        //            $("table tbody").empty();
        //            for (var i = 0; i < company.trndetail.length; i++) {
        //                var markup = "<tr><td><input type='checkbox' id='trnchoices' name='trnsction' value='" + company.trndetail[i].transactionNo + "'></td><td>"
        //                    + company.trndetail[i].transactionNo + "</td><td>"
        //                    + company.trndetail[i].serviceType + "</td><td>"
        //                    + company.cname + "</td><td>"
        //                    + company.trndetail[i].origin + "</td><td>"
        //                    + company.trndetail[i].destination + "</td><td>"
        //                    + company.trndetail[i].consignee + "</td></tr>";
        //                $("table tbody").append(markup);
        //            }
        //            function checkTrns() {
        //                var len = $("input[name='trnsction']:checked").length;
        //                if (len > 2) { $.notify("Maximum of 2 CV's only.", "error");}
        //            }

        //            $("input:checkbox").on("change", function () {
        //                checkTrns();
        //            });
        //        },
        //    });

        //})



            $('#submit').click(function () {
                var isAllValid = true;
                var d1 = new Date($('#issuedate').val());
                var d2 = new Date($('#expirydate').val());
                if (d2 < d1) {
                    $.notify("Expiry date must not be before with the issued date.", "error");
                    isAllValid = false;
                }

                var transactionList = $('#transSelect').val().split(',');
                if (transactionList.length > 2) {
                    $.notify("Maximum of 2 CV's only.", "error");
                    isAllValid = false;
                }
                if ($('#transSelect').val() == '') {
                    $.notify("Please select at least 1 CV to withdraw.", "error");
                    isAllValid = false;
                }

                //if ($("input:checkbox:checked").length < 1) {
                //    $.notify("Must select at least 1 CV to proceed.", "error");
                //    isAllValid = false;
                //}
                //else if ($("input:checkbox:checked").length > 2) {
                //    $.notify("Maximum of 2 CV's allowed.", "error");
                //    isAllValid = false;}
                //else {
                //    var trnArray = [];
                //    $("table tbody").find('input[name="trnsction"]').each(function () {
                //        if ($(this).is(":checked")) {
                //            trnArray.push($(this).val());
                //        }
                //    });
                //    console.log(trnArray);
                //    var trns = trnArray.join();
                //    document.getElementById("transSelect").value = trns;
                //}


                //var bk = $('#bookingno').find(":selected").val();
                //var convan = $('#cvno').find(":selected").val();
                var at = $('#authorizedtrucker').find(":selected").val();
                var ab = $('#issuedby').find(":selected").val();

                if ($('#issuedate').val().trim() == '') {
                    $.notify("Issue Date is required.", "error");
                    isAllValid = false;
                }

                if ($('#atwno').val().trim() == '') {
                    $.notify("ATW No is required.", "error");
                    isAllValid = false;
                }

                //if (bk === '0' || $('#bookingno').val().trim() == '') {
                //    $.notify("Booking No is required.", "error");
                //    isAllValid = false;
                //}

                //if (convan === '0') {
                //    $.notify("ConVan No is required.", "error");
                //    isAllValid = false;
                //}

                if (at === '0' || $('#authorizedtrucker').val().trim() == '') {
                    $.notify("Authorized Trucker is required.", "error");
                    isAllValid = false;
                }

                if (ab === '0' || $('#issuedby').val().trim() == '') {
                    $.notify("ATW Issued By is required.", "error");
                    isAllValid = false;
                }

                if ($('#expirydate').val().trim() == '') {
                    $.notify("Expiry Date is required.", "error");
                    isAllValid = false;
                }

                if ($('#authorizeddriver').val().trim() == '') {
                    $.notify("Authorized Driver is required.", "error");
                    isAllValid = false;
                }

                if ($('#plateno').val().trim() == '') {
                    $.notify("Truck Plate No. is required.", "error");
                    isAllValid = false;
                }

                //if ($('#remarks').val().trim() == '') {
                //    $.notify("Remarks is required.", "error");
                //    isAllValid = false;
                //}

                var transactionnos = $('#transSelect').val().split(',');
                var CVS = $('#cvnos').val().split(',');
                var SHIPPERS = $('#shippers').val().split(',');
                trn1 = transactionnos[0];
                trn2 = transactionnos[1];
                cvno1 = CVS[0];
                cvno2 = CVS[1];
                ship1 = SHIPPERS[0];
                ship2 = SHIPPERS[1];

                if (isAllValid) {


                    var dataHdr = {
                        bkNo: $('#bkno').val(),
                        atwBkNo: $('#atwno').val(),
                        iDate: $('#issuedate').val(),
                        eDate: $('#expirydate').val(),
                        transactionno1:trn1,
                        convanno1:cvno1,
                        shipperno1:ship1,
                        transactionno2:trn2,
                        convanno2:cvno2,
                        shipperno2:ship2,
                        issuedBy: $('#issuedby').val(),
                        cvno: $('#cvno').val(),
                        aDriver: $('#authorizeddriver').val(),
                        aTrucker: $('#authorizedtrucker').val(),
                        plateNo: $('#plateno').val(),
                        remarks: $('#remarks').val(),
                        atwYear: $('#atwyear').val(),
                        atwBkID: $('#atwbkid').val(),
                        trns: $('#transSelect').val(),
                        atwStatus:"Active"
                    }

                    console.log(dataHdr);

                    $.ajax({
                        type: 'POST',
                        url: '../../../ATW/SaveHdr',
                        data: JSON.stringify(dataHdr),
                        contentType: 'application/json',
                        success: function (dataHdr) {
                            if (dataHdr.status) {
                                console.log(dataHdr);
                                $.notify("Operation successfully posted.", "success");
                                var r = confirm("Would like to add another ATW?");
                                if (r == true) {
                                    var url = '@Url.Action("Create", "ATW")';
                                    window.location.href = url;
                                } else {
                                    var url = '@Url.Action("Index", "ATW")';
                                window.location.href = url;
                                }
                            }
                            else {
                                $.notify("Operation failed to post.", "error");
                            }
                            $('#submit').text('Save');
                        },
                        error: function (error) {
                            console.log(error);
                            $('#submit').text('Save');
                        }
                    });
                }
            });//end

        });
    </script>
}

<style>
    /*    .container {
        padding-left: 145px;
    }*/

    th, td {
        width: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /*    table {
        width: 100%;
        margin: 20px 0;
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid #cdcdcd;
    }

        table th, table td {
            padding: 5px;
            text-align: left;
        }*/

</style>

