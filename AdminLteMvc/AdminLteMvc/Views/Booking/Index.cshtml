@model AdminLteMvc.Models.WEBSales.Booking


@{
    ViewBag.Title = "Booking";
    Layout = "~/Views/Shared/_AdminLteLayout.cshtml";
}


<div class="box box-success">
    <div class="box-header with-border">
        <h3 class="box-title">@Html.Awe().TextBox("txtsearch").Placeholder("Search").CssClass("searchtxt")</h3>
    </div><!-- /.box-header -->
    <div class="box-body">

        <div id="demoContent">

            @(Html.Awe().Grid("ApiDemoGrid")
          .Mod(o => o.PageInfo().PageSize().ColumnsSelector())
          .Columns(new[]{
              new Column{Bind = "stat",Header = "Notification"},
              new Column{Bind = "docNum",Header = "Booking Number"},
              new Column{Bind = "docDate", Header = "Booking Date"},
              //new Column{Bind = "inhouseBookingDate", Header = "In-House Booking Date"},
              new Column{Bind = "trnStatus",Header = "Booking Status"},
              new Column{Bind = "mnemonic",Header = "Mnemonic"},
              new Column{Bind = "cnameshpr",Header = "Customer/Shipper Name"},
              new Column{Bind = "shipperAddress",Header = "Customer/Shipper Address"},
              new Column{Bind = "contactperson",Header = "Customer/Shipper Contact Person"},
              new Column{Bind = "contactno",Header = "Customer/Shipper Contact No."},
              new Column{Bind = "noofcvs",Header = "No. of ConVans"},
              new Column{Bind = "csize",Header = "ConVan Size"},
              new Column{Bind = "cstatus",Header = "ConVan Status"},
              new Column{Bind = "inputtedby", Header = "Inputted By"},
              new Column{Bind = "csr", Header = "Customer Service Representative"},
              new Column{Bind = "accountexecutive", Header = "Account Executive"},

          })
              .Resizable()
              .Reorderable(true)
              .Height(350)
              .Groupable(false)
              .Selectable(SelectionType.Single)
              .Parent("txtsearch", "search")
              .Url(Url.Action("GetItems", "Booking")))
        </div>
    </div>
    <div class="box-footer">
        <button type="button" id="addnew" class="btn btn-primary" onclick="location.href = '@Url.Action("Create", "Booking")'"> <i class="fa fa-plus-circle fa-1x"></i> Add New Booking</button>
        <button type="button" class="btn btn-success" id="view"> <i class="fa fa-search fa-1x"></i> Transaction Details</button>
        <button type="button" class="btn btn-info" id="viewbk"> <i class="fa fa-info-circle"></i> View Booking</button>
        
        <button type="button" class="btn btn-danger" id="cancel"> <i class="fa fa-close fa-1x"></i> Cancel Booking </button>
    </div>
</div>
<link href="~/Content/bootstrap-toggle.css" rel="stylesheet" />
@*<link href="https://gitcdn.github.io/bootstrap-toggle/2.2.0/css/bootstrap-toggle.min.css" rel="stylesheet">*@
@section Scripts{
    @*<script src="https://gitcdn.github.io/bootstrap-toggle/2.2.0/js/bootstrap-toggle.min.js"></script>*@
    <script src="~/Scripts/bootstap-toggle.js"></script>

    <script type="text/javascript">

        $(function () {

            $('#ApiDemoGrid').on('awerender', function () {
                $(this).find(".checkbox-toggle").bootstrapToggle();
            });

            $('#txtsearch').keyup(function () {
                $('#ApiDemoGrid').data('api').load();
            });

            $('#ApiDemoGrid').on('aweload', function (e, data, rd) {
                $('#log').prepend('aweload handled,\n data: ' + JSON.stringify(data) + "\n request data" + JSON.stringify(rd) + '\n\n');
            }).on('awebeginload', function (e, data) {
                $('#log').prepend('awebeginload handled,\n request data: ' + JSON.stringify(data) + '\n\n');
            });

            var lastSelectedIds;
            $('#ApiDemoGrid').on('aweselect', function () {
                lastSelectedIds = $.map($(this).data('api').getSelection(), function (val) { return val.ID); });
                lastSelectedIdStat = $.map($(this).data('api').getSelection(), function (val) { return val.trnStatus; });
                console.log(lastSelectedIds);
                console.log(lastSelectedIdStat);
                if (lastSelectedIdStat == "Cancelled" || lastSelectedIdStat == "Closed") {
                    document.getElementById("cancel").disabled = true;
                    document.getElementById("edit").disabled = true;
                } else {
                    document.getElementById("addnew").disabled = false;
                    document.getElementById("cancel").disabled = false;
                    document.getElementById("edit").disabled = false;
                }
            })

            $('#view').click(function () {

                if (lastSelectedIds != null) {
                    if (lastSelectedIds.length != 0) {
                        window.location.href = '/Booking/TrnDetails/' + lastSelectedIds;
                    }
                    else {
                        $.notify("Please select booking to view its details.", "error");
                    }
                }
                else {
                    $.notify("Please select booking to view its details.", "error");
                }
            });

            $('#viewbk').click(function () {

                if (lastSelectedIds != null) {
                    if (lastSelectedIds.length != 0) {
                        window.location.href = '/Booking/ViewBooking/' + lastSelectedIds;
                    }
                    else {
                        $.notify("Please select booking to view.", "error");
                    }
                }
                else {
                    $.notify("Please select booking to view.", "error");
                }
            });

            $('#edit').click(function () {
                if (lastSelectedIds != null) {
                    if (lastSelectedIds.length != 0) {
                        window.location.href = '/Booking/EditHeader/' + lastSelectedIds;
                    }
                    else {
                        $.notify("Please select transaction to edit.", "error");
                    }
                }
                else {
                    $.notify("Please select transaction to edit.", "error");
                }
            });



            $('#cancel').click(function () {
                if (lastSelectedIds != null) {
                    if (lastSelectedIds.length != 0) {
                        window.location.href = '/Booking/Cancel/' + lastSelectedIds;
                    }
                    else {
                        $.notify("Please select booking to cancel.", "error");
                    }
                }
                else {
                    $.notify("Please select booking to cancel.", "error");
                }
            });
        });

        function setContent(o) {
            $('#ApiDemoGrid').data('api').clearpersist();
            $('#demoContent').html(o);
        };

        var toggleButton = function (model, prop) {
            var checked = model[prop] ? 'checked = "checked"' : '';
            return '<input disabled="disabled" type="checkbox" ' + checked + ' class="checkbox-toggle" data-toggle="toggle" data-on="Yes" data-off="No" data-size="small">';
        };

    </script>

}

<style>
    td {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .boldh .awe-col, .boldh {
        color: blue;
    }

    .bluev {
        color: blueviolet;
    }

    .pinkb {
        background: pink !important;
    }

    .greenb {
        background: #f0f9f7 !important;
    }
</style>
